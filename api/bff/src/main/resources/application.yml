scheme: http
hostname: localhost
keycloak-host: http://${hostname}/auth
keycloak-realm: quiz
oauth2-issuer: ${keycloak-host}/realms/${keycloak-realm}
oauth2-client-id: quiz-bff
oauth2-client-secret: secret

reverse-proxy-uri: ${scheme}://${hostname}
gateway-uri: ${reverse-proxy-uri}/bff
quiz-api-uri: ${scheme}://${hostname}:7084

server:
  port: 7080
  ssl:
    enabled: false

spring:
  config:
    import:
    - optional:configtree:/workspace/config/
    - optional:configtree:/workspace/secret/
  lifecycle:
    timeout-per-shutdown-phase: 30s
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${oauth2-issuer}
            user-name-attribute: preferred_username
        registration:
          quiz-bff:
            provider: keycloak
            client-id: ${oauth2-client-id}
            client-secret: ${oauth2-client-secret}
            authorization-grant-type: authorization_code
            scope: openid, profile, email, offline_access
  cloud:
    gateway:
      default-filters:
      - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin Access-Control-Request-Method Access-Control-Request-Headers
      routes:
      - id: quiz-bff
        uri: ${quiz-api-uri}
        predicates:
        - Path=/v1/**
        filters:
        - TokenRelay=
        - SaveSession
        - StripPrefix=1
      # Cert-manager http01 challenge for SSL certificates on K8s
      - id: letsencrypt
        uri: https://cert-manager-webhook
        predicates:
        - Path=/.well-known/acme-challenge/**

com:
  c4-soft:
    springaddons:
      oidc:
        # Global OAuth2 configuration
        ops:
        - iss: ${oauth2-issuer}
          username-claim: ${spring.security.oauth2.client.provider.oauth2.user-name-attribute}
          authorities:
          - path: $.realm_access.roles
        client:
          client-uri: ${gateway-uri}
          security-matchers:
          - /login/**
          - /oauth2/**
          - /logout/**
          - /v1/**
          permit-all:
          - /login/**
          - /oauth2/**
          - /logout/connect/back-channel/quiz-bff
          - /v1/**
          csrf: cookie-accessible-from-js
          post-login-redirect-host: ${reverse-proxy-uri}
          post-login-redirect-path: /ui/
          post-logout-redirect-host: ${reverse-proxy-uri}
          post-logout-redirect-path: /ui/
          oauth2-redirections:
            rp-initiated-logout: ACCEPTED
          pkce-forced: true
          back-channel-logout:
            enabled: true
            internal-logout-uri: ${gateway-uri}/logout/connect/back-channel/quiz-bff
        # OAuth2 resource server configuration
        resourceserver:
          permit-all:
          - /login-options
          - /ui/**
          - /v3/api-docs/**
          - /actuator/health/readiness
          - /actuator/health/liveness
          - /.well-known/**

management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    root: INFO
    org:
      springframework:
        security: INFO
        boot: INFO
    
---
spring:
  config:
    activate:
      on-profile: ssl
  cloud:
    gateway:
      default-filters:
      - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin Access-Control-Request-Method Access-Control-Request-Headers
      - SecureHeaders
server:
  ssl:
    enabled: true

scheme: https
